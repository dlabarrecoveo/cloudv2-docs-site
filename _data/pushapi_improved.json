{
  "definitions": {
    "DocumentBody": {
      "type": "object"
    },
    "Empty": {
      "type": "object"
    },
    "Error": {
      "properties": {
        "errorCode": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "IdentityBody": {
      "type": "object"
    }
  },
  "host": "push.cloud.coveo.com/v1",
  "info": {
    "title": "Push API Reference",
    "description": "The Push API allows developers to make content searchable by sending system items (and if applicable their associated permissions) to a Coveo Cloud V2 push type source.",
    "version": "2016-03-03T13:22:11Z"
  },
  "paths": {
    "/api-docs": {
      "get": {
        "summary": "get the Push API documentation",
        "description": "https://push.cloud.coveo.com/v1/api-docs",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "full"
            ]
          }
        ],
        "tags": [
          "apidoc"
        ],
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::571451623975:role/npra-role-pushapi-gateway",
          "httpMethod": "GET",
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "200"
            }
          },
          "type": "aws",
          "uri": "arn:aws:apigateway:us-east-1:s3:path/${stageVariables.swaggerBucket}/apigateway_push_api.json"
        }
      },
      "options": {
        "summary": {
          "type": "string"
        },
        "description": "CORS filters",
        "responses": {
          "200": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "tags": [
          "apidoc"
        ],
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::571451623975:role/npra-role-pushapi-gateway",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Accept,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock"
        }
      }
    },
    "/organizations/{organizationId}/files": {
      "options": {
        "summary": {
          "type": "string"
        },
        "responses": {
          "200": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "tags": [
          "file"
        ],
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::571451623975:role/npra-role-pushapi-gateway",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Accept,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock"
        },
        "x-pretty-name": "getPresignedUploadUrl-OPTIONS"
      },
      "post": {
        "summary": "get a large container",
        "parameters": [
          {
            "in": "path",
            "name": "organizationId",
            "description": "unique organization identifier",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "400": {
            "description": "The request contains invalid data.",
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "415": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "full"
            ]
          }
        ],
        "tags": [
          "file"
        ],
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::571451623975:role/npra-role-pushapi-gateway",
          "httpMethod": "POST",
          "requestTemplates": {
            "application/json": "{\n    \"content-type\": \"application/json\",\n    \"command\": \"GET_PRESIGNED_UPLOAD_URL\",\n    \"redisEndpoint\": \"$stageVariables.redisEndpoint\",\n    \"documentLogsDeliveryStreamName\": \"$stageVariables.documentLogsDeliveryStreamName\",\n    \"authorizationServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n    \"organizationServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n    \"accessToken\": \"$input.params('Authorization')\",\n    \"clientId\": \"$stageVariables.clientId\",\n    \"clientSecret\": \"$stageVariables.clientSecret\",\n    \"organizationId\": \"$util.urlDecode($input.params('organizationId'))\",\n    \"blobstoreBucketName\": \"$stageVariables.blobstoreBucketName\",\n    \"debug\": \"False\"\n}"
          },
          "responses": {
            "ACCESS_DENIED.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "403"
            },
            "An error occurred during JSON parsing|INVALID_JSON.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "400"
            },
            "INVALID_TOKEN.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "401"
            },
            "ORGANIZATION_NOT_FOUND.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "404"
            },
            "SOURCE_DOES_NOT_EXIST.*|MISSING_PARAMETER.*|INVALID_PARAMETER.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "412"
            },
            "UNSUPPORTED_MEDIA_TYPE.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "415"
            },
            "^$": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "201"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "500"
            }
          },
          "type": "aws",
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:571451623975:function:${stageVariables.lambdaName}/invocations"
        },
        "x-pretty-name": "getPresignedUploadUrl"
      }
    },
    "/organizations/{organizationId}/providers/{providerId}/mappings": {
      "options": {
        "summary": {
          "type": "string"
        },
        "responses": {
          "200": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "tags": [
          "identity"
        ],
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::571451623975:role/npra-role-pushapi-gateway",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Accept,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock"
        },
        "x-pretty-name": "addUpdateMappedIdentity-OPTIONS"
      },
      "put": {
        "summary": "add or update a mapped security identity in a security identity provider",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "providerId",
            "description": "unique identifier of the provider into which the mapped identity will be added or updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "organizationId",
            "description": "unique organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "operationId",
            "description": "depricated",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "orderingId",
            "description": "[optional] 64-bit unsigned integer that will be used by the index to ensure that operations are applied in the correct order",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "IdentityBody",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdentityBody"
            }
          }
        ],
        "responses": {
          "202": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "400": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "415": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "full"
            ]
          }
        ],
        "tags": [
          "identity"
        ],
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::571451623975:role/npra-role-pushapi-gateway",
          "httpMethod": "POST",
          "requestTemplates": {
            "application/json": "{\n    \"content-type\": \"application/json\",\n    \"command\": \"ADD_UPDATE_MAPPED_IDENTITY\",\n    \"accessToken\": \"$input.params('Authorization')\",\n    \"redisEndpoint\": \"$stageVariables.redisEndpoint\",\n    \"documentLogsDeliveryStreamName\": \"$stageVariables.documentLogsDeliveryStreamName\",\n    \"authorizationServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n    \"organizationServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n    \"bucketName\": \"$stageVariables.bucketName\",\n    \"clientId\": \"$stageVariables.clientId\",\n    \"clientSecret\": \"$stageVariables.clientSecret\",\n    \"addUpdateMappedIdentityModel\": $input.json('$'),\n    \"operationId\": #if($input.params('orderingId') == '')\"$input.params('operationId')\"#else\"$input.params('orderingId')\"#end,\n    \"organizationId\": \"$util.urlDecode($input.params('organizationId'))\",\n    \"queueUrl\": \"$stageVariables.identityQueueUrl\",\n    \"providerId\": \"$util.urlDecode($input.params('providerId'))\",\n    \"debug\": \"False\"\n}"
          },
          "responses": {
            "ACCESS_DENIED.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "403"
            },
            "An error occurred during JSON parsing|INVALID_JSON.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "400"
            },
            "INVALID_IDENTITY.*|ORGANIZATION_CLUSTER_NOT_FOUND.*|SECURITY_PROVIDER_NOT_FOUND.*|MISSING_PARAMETER.*|INVALID_PARAMETER.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "412"
            },
            "INVALID_TOKEN.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "401"
            },
            "ORGANIZATION_NOT_FOUND.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "404"
            },
            "UNSUPPORTED_MEDIA_TYPE.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "415"
            },
            "^$": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "202"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "500"
            }
          },
          "type": "aws",
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:571451623975:function:${stageVariables.lambdaName}/invocations"
        },
        "x-pretty-name": "addUpdateMappedIdentity"
      }
    },
    "/organizations/{organizationId}/providers/{providerId}/permissions": {
      "delete": {
        "summary": "delete a security identity from a security identity provider",
        "parameters": [
          {
            "in": "path",
            "name": "providerId",
            "description": "unique identifier of the provider from which the identity will be deleted",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "organizationId",
            "description": "unique organization identifier",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "202": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "400": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "415": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "full"
            ]
          }
        ],
        "tags": [
          "identity"
        ],
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::571451623975:role/npra-role-pushapi-gateway",
          "httpMethod": "POST",
          "requestTemplates": {
            "application/json": "{\n    \"content-type\": \"application/json\",\n    \"command\": \"DELETE_IDENTITY\",\n    \"accessToken\": \"$input.params('Authorization')\",\n    \"redisEndpoint\": \"$stageVariables.redisEndpoint\",\n    \"documentLogsDeliveryStreamName\": \"$stageVariables.documentLogsDeliveryStreamName\",\n    \"authorizationServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n    \"organizationServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n    \"bucketName\": \"$stageVariables.bucketName\",\n    \"clientId\": \"$stageVariables.clientId\",\n    \"clientSecret\": \"$stageVariables.clientSecret\",\n    \"deleteIdentityModel\": $input.json('$'),\n    \"organizationId\": \"$util.urlDecode($input.params('organizationId'))\",\n    \"queueUrl\": \"$stageVariables.identityQueueUrl\",\n    \"providerId\": \"$util.urlDecode($input.params('providerId'))\",\n    \"debug\": \"False\"\n}"
          },
          "responses": {
            "ACCESS_DENIED.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "403"
            },
            "An error occurred during JSON parsing|INVALID_JSON.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "400"
            },
            "INVALID_IDENTITY.*|ORGANIZATION_CLUSTER_NOT_FOUND.*|SECURITY_PROVIDER_NOT_FOUND.*|MISSING_PARAMETER.*|INVALID_PARAMETER.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "412"
            },
            "INVALID_TOKEN.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "401"
            },
            "ORGANIZATION_NOT_FOUND.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "404"
            },
            "UNSUPPORTED_MEDIA_TYPE.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "415"
            },
            "^$": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "202"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "500"
            }
          },
          "type": "aws",
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:571451623975:function:${stageVariables.lambdaName}/invocations"
        },
        "x-pretty-name": "deleteIdentity"
      },
      "options": {
        "summary": {
          "type": "string"
        },
        "responses": {
          "200": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "tags": [
          "identity"
        ],
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::571451623975:role/npra-role-pushapi-gateway",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Accept,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock"
        },
        "x-pretty-name": "addUpdateIdentity-OPTIONS"
      },
      "put": {
        "summary": "add or update a security identity in a security identity provider",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "providerId",
            "description": "unique identifier of the provider into which the identity will be added or updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "organizationId",
            "description": "unique organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "operationId",
            "description": "depricated",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "orderingId",
            "description": "64-bit unsigned integer that will be used by the index to ensure that operations are applied in the correct order",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "IdentityBody",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdentityBody"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "202": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "400": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "415": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "full"
            ]
          }
        ],
        "tags": [
          "identity"
        ],
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::571451623975:role/npra-role-pushapi-gateway",
          "httpMethod": "POST",
          "requestTemplates": {
            "application/json": "{\n    \"content-type\": \"application/json\",\n    \"command\": \"ADD_UPDATE_IDENTITY\",\n    \"accessToken\": \"$input.params('Authorization')\",\n    \"redisEndpoint\": \"$stageVariables.redisEndpoint\",\n    \"documentLogsDeliveryStreamName\": \"$stageVariables.documentLogsDeliveryStreamName\",\n    \"authorizationServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n    \"organizationServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n    \"bucketName\": \"$stageVariables.bucketName\",\n    \"clientId\": \"$stageVariables.clientId\",\n    \"clientSecret\": \"$stageVariables.clientSecret\",\n    \"addUpdateIdentityModel\": $input.json('$'),\n    \"operationId\": #if($input.params('orderingId') == '')\"$input.params('operationId')\"#else\"$input.params('orderingId')\"#end,\n    \"organizationId\": \"$util.urlDecode($input.params('organizationId'))\",\n    \"queueUrl\": \"$stageVariables.identityQueueUrl\",\n    \"providerId\": \"$util.urlDecode($input.params('providerId'))\",\n    \"debug\": \"False\"\n}"
          },
          "responses": {
            "ACCESS_DENIED.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "403"
            },
            "An error occurred during JSON parsing|INVALID_JSON.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "400"
            },
            "INVALID_IDENTITY.*|ORGANIZATION_CLUSTER_NOT_FOUND.*|SECURITY_PROVIDER_NOT_FOUND.*|MISSING_PARAMETER.*|INVALID_PARAMETER.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "412"
            },
            "INVALID_TOKEN.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "401"
            },
            "ORGANIZATION_NOT_FOUND.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "404"
            },
            "UNSUPPORTED_MEDIA_TYPE.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "415"
            },
            "^$": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "202"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "500"
            }
          },
          "type": "aws",
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:571451623975:function:${stageVariables.lambdaName}/invocations"
        },
        "x-pretty-name": "addUpdateIdentity"
      }
    },
    "/organizations/{organizationId}/providers/{providerId}/permissions/batch": {
      "options": {
        "summary": {
          "type": "string"
        },
        "responses": {
          "200": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "tags": [
          "identity"
        ],
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::571451623975:role/npra-role-pushapi-gateway",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Accept,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock"
        },
        "x-pretty-name": "addUpdateDeleteBatchedIdentity-OPTIONS"
      },
      "put": {
        "summary": "add or update a large number of security identities in a security identity provider",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "providerId",
            "description": "unique identifier of the provider into which identities will be added or updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "fileId",
            "description": "unique file identifier",
            "required": false,
            "type": "string"
          },
          {
            "in": "path",
            "name": "organizationId",
            "description": "unique organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "operationId",
            "description": "depricated",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "orderingId",
            "description": "64-bit unsigned integer that will be used by the index to ensure that operations are applied in the correct order",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "IdentityBody",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdentityBody"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "202": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "400": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "415": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "full"
            ]
          }
        ],
        "tags": [
          "identity"
        ],
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::571451623975:role/npra-role-pushapi-gateway",
          "httpMethod": "POST",
          "requestTemplates": {
            "application/json": "{\n    \"content-type\": \"application/json\",\n    \"command\": \"PROCESS_BATCHED_IDENTITY\",\n    \"accessToken\": \"$input.params('Authorization')\",\n    \"redisEndpoint\": \"$stageVariables.redisEndpoint\",\n    \"documentLogsDeliveryStreamName\": \"$stageVariables.documentLogsDeliveryStreamName\",\n    \"authorizationServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n    \"organizationServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n    \"bucketName\": \"$stageVariables.bucketName\",\n    \"clientId\": \"$stageVariables.clientId\",\n    \"clientSecret\": \"$stageVariables.clientSecret\",\n    \"fileId\": \"$input.params('fileId')\",\n    \"operationId\": #if($input.params('orderingId') == '')\"$input.params('operationId')\"#else\"$input.params('orderingId')\"#end,\n    \"blobstoreBucketName\": \"$stageVariables.blobstoreBucketName\",\n    \"organizationId\": \"$util.urlDecode($input.params('organizationId'))\",\n    \"queueUrl\": \"$stageVariables.identityQueueUrl\",\n    \"providerId\": \"$util.urlDecode($input.params('providerId'))\",\n    \"debug\": \"False\"\n}"
          },
          "responses": {
            "ACCESS_DENIED.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "403"
            },
            "An error occurred during JSON parsing|INVALID_JSON.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "400"
            },
            "INVALID_IDENTITY.*|ORGANIZATION_CLUSTER_NOT_FOUND.*|SECURITY_PROVIDER_NOT_FOUND.*|MISSING_PARAMETER.*|INVALID_PARAMETER.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "412"
            },
            "INVALID_TOKEN.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "401"
            },
            "ORGANIZATION_NOT_FOUND.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "404"
            },
            "UNSUPPORTED_MEDIA_TYPE.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "415"
            },
            "^$": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "202"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "500"
            }
          },
          "type": "aws",
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:571451623975:function:${stageVariables.lambdaName}/invocations"
        },
        "x-pretty-name": "addUpdateDeleteBatchedIdentity"
      }
    },
    "/organizations/{organizationId}/providers/{providerId}/permissions/olderthan": {
      "delete": {
        "summary": "delete unrefreshed security identities from a security identity provider",
        "parameters": [
          {
            "in": "path",
            "name": "providerId",
            "description": "unique identifier of the provider from which identities will be deleted",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "organizationId",
            "description": "unique organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "operationId",
            "description": "depricated",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "orderingId",
            "description": "64-bit unsigned integer that is used to identify identities in time so a clean-up can be performed to collect old deleted identities from the provider",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "202": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "400": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "415": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "full"
            ]
          }
        ],
        "tags": [
          "identity"
        ],
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::571451623975:role/npra-role-pushapi-gateway",
          "httpMethod": "POST",
          "requestTemplates": {
            "application/json": "{\n    \"content-type\": \"application/json\",\n    \"command\": \"DELETE_OLD_IDENTITIES\",\n    \"accessToken\": \"$input.params('Authorization')\",\n    \"redisEndpoint\": \"$stageVariables.redisEndpoint\",\n    \"documentLogsDeliveryStreamName\": \"$stageVariables.documentLogsDeliveryStreamName\",\n    \"authorizationServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n    \"organizationServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n    \"clientId\": \"$stageVariables.clientId\",\n    \"clientSecret\": \"$stageVariables.clientSecret\",\n    \"operationId\": #if($input.params('orderingId') == '')\"$input.params('operationId')\"#else\"$input.params('orderingId')\"#end,\n    \"organizationId\": \"$util.urlDecode($input.params('organizationId'))\",\n    \"queueUrl\": \"$stageVariables.identityQueueUrl\",\n    \"providerId\": \"$util.urlDecode($input.params('providerId'))\",\n    \"debug\": \"False\"\n}"
          },
          "responses": {
            "ACCESS_DENIED.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "403"
            },
            "An error occurred during JSON parsing|INVALID_JSON.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "400"
            },
            "INVALID_IDENTITY.*|ORGANIZATION_CLUSTER_NOT_FOUND.*|SECURITY_PROVIDER_NOT_FOUND.*|MISSING_PARAMETER.*|INVALID_PARAMETER.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "412"
            },
            "INVALID_TOKEN.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "401"
            },
            "ORGANIZATION_NOT_FOUND.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "404"
            },
            "UNSUPPORTED_MEDIA_TYPE.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "415"
            },
            "^$": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "202"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "500"
            }
          },
          "type": "aws",
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:571451623975:function:${stageVariables.lambdaName}/invocations"
        },
        "x-pretty-name": "deleteIdentityOlderThan"
      },
      "options": {
        "summary": {
          "type": "string"
        },
        "responses": {
          "200": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "tags": [
          "identity"
        ],
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::571451623975:role/npra-role-pushapi-gateway",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Accept,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock"
        },
        "x-pretty-name": "deleteIdentityOlderThan-OPTIONS"
      }
    },
    "/organizations/{organizationId}/sources/{sourceId}/documents": {
      "delete": {
        "summary": "delete an item from a source",
        "parameters": [
          {
            "in": "query",
            "name": "orderingId",
            "description": "64-bit unsigned integer that is used to identify items in time so a clean-up can be performed to collect old deleted items from the provider",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "deleteChildren",
            "description": "Boolean used to determine if the item children will be deleted as part of the delete process",
            "required": false,
            "type": "string"
          },
          {
            "in": "path",
            "name": "sourceId",
            "description": "unique identifier of the source from which the item will be deleted",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "documentId",
            "description": "unique item identifier",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "organizationId",
            "description": "unique organization identifier",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "202": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "400": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "415": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "full"
            ]
          }
        ],
        "tags": [
          "document"
        ],
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::571451623975:role/npra-role-pushapi-gateway",
          "httpMethod": "POST",
          "requestTemplates": {
            "application/json": "{\n    \"content-type\": \"application/json\",\n    \"command\": \"DELETE_DOCUMENT\",\n    \"redisEndpoint\": \"$stageVariables.redisEndpoint\",\n    \"documentLogsDeliveryStreamName\": \"$stageVariables.documentLogsDeliveryStreamName\",\n    \"authorizationServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n    \"organizationServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n  \"accessToken\": \"$input.params('Authorization')\",\n  \"clientId\": \"$stageVariables.clientId\",\n  \"clientSecret\": \"$stageVariables.clientSecret\",\n  \"sourceServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n  \"queueUrl\": \"$stageVariables.queueUrl\",\n  \"organizationId\": \"$util.urlDecode($input.params('organizationId'))\",\n  \"sourceId\": \"$util.urlDecode($input.params('sourceId'))\",\n  \"deleteChildren\": \"$input.params('deleteChildren')\",\n  \"documentId\": \"$input.params('documentId')\",\n    \"orderingId\": \"$input.params('orderingId')\",\n    \"debug\": \"False\"\n}"
          },
          "responses": {
            "ACCESS_DENIED.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "403"
            },
            "An error occurred during JSON parsing|INVALID_JSON.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "400"
            },
            "INVALID_TOKEN.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "401"
            },
            "ORGANIZATION_NOT_FOUND.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "404"
            },
            "SOURCE_DOES_NOT_EXIST.*|MISSING_PARAMETER.*|INVALID_PARAMETER.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "412"
            },
            "UNSUPPORTED_MEDIA_TYPE.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "415"
            },
            "^$": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "202"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "500"
            }
          },
          "type": "aws",
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:571451623975:function:${stageVariables.lambdaName}/invocations"
        },
        "x-pretty-name": "deleteDocument"
      },
      "options": {
        "summary": {
          "type": "string"
        },
        "responses": {
          "200": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "tags": [
          "document"
        ],
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::571451623975:role/npra-role-pushapi-gateway",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Accept,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock"
        },
        "x-pretty-name": "addUpdateDocument-OPTIONS"
      },
      "put": {
        "summary": "add or update an item in a source",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "orderingId",
            "description": "64-bit unsigned integer that will be used by the index to ensure that operations are applied in the correct order",
            "required": false,
            "type": "string"
          },
          {
            "in": "path",
            "name": "sourceId",
            "description": "unique identifier of the source in which the item will be added or deleted",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "documentId",
            "description": "unique item identifier",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "organizationId",
            "description": "unique organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "DocumentBody",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentBody"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "202": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "400": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "415": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "full"
            ]
          }
        ],
        "tags": [
          "document"
        ],
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::571451623975:role/npra-role-pushapi-gateway",
          "httpMethod": "POST",
          "requestTemplates": {
            "application/json": "{\n    \"content-type\": \"application/json\",\n    \"command\": \"ADD_UPDATE_DOCUMENT\",\n    \"accessToken\": \"$input.params('Authorization')\",\n    \"redisEndpoint\": \"$stageVariables.redisEndpoint\",\n    \"documentLogsDeliveryStreamName\": \"$stageVariables.documentLogsDeliveryStreamName\",\n    \"authorizationServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n    \"organizationServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n    \"bucketName\": \"$stageVariables.bucketName\",\n    \"clientId\": \"$stageVariables.clientId\",\n    \"clientSecret\": \"$stageVariables.clientSecret\",\n    \"documentBody\": $input.json('$'),\n    \"documentId\": \"$input.params('documentId')\",\n    \"orderingId\": \"$input.params('orderingId')\",\n    \"organizationId\": \"$util.urlDecode($input.params('organizationId'))\",\n    \"queueUrl\": \"$stageVariables.queueUrl\",\n    \"sourceServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n    \"sourceId\": \"$util.urlDecode($input.params('sourceId'))\",\n    \"debug\": \"False\"\n}"
          },
          "responses": {
            "ACCESS_DENIED.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "403"
            },
            "INVALID_PARAMETER.*|An error occurred during JSON parsing|INVALID_JSON.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "400"
            },
            "INVALID_TOKEN.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "401"
            },
            "ORGANIZATION_NOT_FOUND.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "404"
            },
            "SOURCE_DOES_NOT_EXIST.*|MISSING_PARAMETER.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "412"
            },
            "UNSUPPORTED_MEDIA_TYPE.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "415"
            },
            "^$": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "202"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "500"
            }
          },
          "type": "aws",
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:571451623975:function:${stageVariables.lambdaName}/invocations"
        },
        "x-pretty-name": "addUpdateDocument"
      }
    },
    "/organizations/{organizationId}/sources/{sourceId}/documents/batch": {
      "options": {
        "summary": {
          "type": "string"
        },
        "responses": {
          "200": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "tags": [
          "document"
        ],
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::571451623975:role/npra-role-pushapi-gateway",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Accept,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock"
        },
        "x-pretty-name": "addUpdateDeleteBatchedDocument-OPTIONS"
      },
      "put": {
        "summary": "add, update, or delete a large number of encrypted items in a source",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "description": "unique identifier of the source in which the items will be added, updated, or deleted",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "fileId",
            "description": "unique file identifier",
            "required": false,
            "type": "string"
          },
          {
            "in": "path",
            "name": "organizationId",
            "description": "unique organization identifier",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "202": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "400": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "415": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "full"
            ]
          }
        ],
        "tags": [
          "document"
        ],
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::571451623975:role/npra-role-pushapi-gateway",
          "httpMethod": "POST",
          "requestTemplates": {
            "application/json": "{\n    \"content-type\": \"application/json\",\n    \"command\": \"PROCESS_BATCHED_DOCUMENT\",\n    \"accessToken\": \"$input.params('Authorization')\",\n    \"redisEndpoint\": \"$stageVariables.redisEndpoint\",\n    \"documentLogsDeliveryStreamName\": \"$stageVariables.documentLogsDeliveryStreamName\",\n    \"authorizationServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n    \"organizationServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n    \"blobstoreBucketName\": \"$stageVariables.blobstoreBucketName\",\n    \"clientId\": \"$stageVariables.clientId\",\n    \"clientSecret\": \"$stageVariables.clientSecret\",\n    \"organizationId\": \"$util.urlDecode($input.params('organizationId'))\",\n    \"fileId\": \"$input.params('fileId')\",\n    \"queueUrl\": \"$stageVariables.queueUrl\",\n    \"sourceServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n    \"sourceId\": \"$util.urlDecode($input.params('sourceId'))\",\n    \"debug\": \"False\"\n}"
          },
          "responses": {
            "ACCESS_DENIED.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "403"
            },
            "INVALID_PARAMETER.*|An error occurred during JSON parsing|INVALID_JSON.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "400"
            },
            "INVALID_TOKEN.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "401"
            },
            "ORGANIZATION_NOT_FOUND.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "404"
            },
            "SOURCE_DOES_NOT_EXIST.*|MISSING_PARAMETER.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "412"
            },
            "UNSUPPORTED_MEDIA_TYPE.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "415"
            },
            "^$": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "202"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "500"
            }
          },
          "type": "aws",
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:571451623975:function:${stageVariables.lambdaName}/invocations"
        },
        "x-pretty-name": "addUpdateDeleteBatchedDocument"
      }
    },
    "/organizations/{organizationId}/sources/{sourceId}/documents/olderthan": {
      "delete": {
        "summary": "delete unrefreshed items from a source",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "description": "unique identifier of the source from which the items will be deleted",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "orderingId",
            "description": "64-bit unsigned integer that will be used by the index to ensure that operations are applied in the correct order",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "queueDelay",
            "required": false,
            "type": "string"
          },
          {
            "in": "path",
            "name": "organizationId",
            "description": "unique organization identifier",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "202": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "400": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "415": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "full"
            ]
          }
        ],
        "tags": [
          "document"
        ],
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::571451623975:role/npra-role-pushapi-gateway",
          "httpMethod": "POST",
          "requestTemplates": {
            "application/json": "{\n    \"content-type\": \"application/json\",\n    \"command\": \"DELETE_OLDER_THAN_DOCUMENT\",\n    \"accessToken\": \"$input.params('Authorization')\",\n    \"redisEndpoint\": \"$stageVariables.redisEndpoint\",\n    \"documentLogsDeliveryStreamName\": \"$stageVariables.documentLogsDeliveryStreamName\",\n    \"authorizationServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n    \"organizationServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n    \"clientId\": \"$stageVariables.clientId\",\n    \"clientSecret\": \"$stageVariables.clientSecret\",\n    \"orderingId\": \"$input.params('orderingId')\",\n    \"queueDelay\": \"$input.params('queueDelay')\",\n    \"defaultQueueDelay\": \"$stageVariables.defaultQueueDelayForDeleteOlderThan\",\n    \"organizationId\": \"$util.urlDecode($input.params('organizationId'))\",\n    \"queueUrl\": \"$stageVariables.queueUrl\",\n    \"sourceServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n    \"sourceId\": \"$util.urlDecode($input.params('sourceId'))\",\n    \"debug\": \"False\"\n}"
          },
          "responses": {
            "ACCESS_DENIED.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "403"
            },
            "INVALID_PARAMETER.*|An error occurred during JSON parsing|INVALID_JSON.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "400"
            },
            "INVALID_TOKEN.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "401"
            },
            "ORGANIZATION_NOT_FOUND.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "404"
            },
            "SOURCE_DOES_NOT_EXIST.*|MISSING_PARAMETER.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "412"
            },
            "UNSUPPORTED_MEDIA_TYPE.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "415"
            },
            "^$": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "202"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "500"
            }
          },
          "type": "aws",
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:571451623975:function:${stageVariables.lambdaName}/invocations"
        },
        "x-pretty-name": "deleteDocumentsOlderThan"
      },
      "options": {
        "summary": {
          "type": "string"
        },
        "responses": {
          "200": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "tags": [
          "document"
        ],
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::571451623975:role/npra-role-pushapi-gateway",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Accept,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock"
        },
        "x-pretty-name": "deleteDocumentsOlderThan-OPTIONS"
      }
    },
    "/organizations/{organizationId}/sources/{sourceId}/status": {
      "options": {
        "summary": {
          "type": "string"
        },
        "responses": {
          "200": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "tags": [
          "source"
        ],
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::571451623975:role/npra-role-pushapi-gateway",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Accept,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock"
        },
        "x-pretty-name": "setSourceStatus-OPTIONS"
      },
      "post": {
        "summary": "set the source status",
        "parameters": [
          {
            "in": "query",
            "name": "statusType",
            "description": "status of the source",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "sourceId",
            "description": "unique identifier of the source for which the status is specified",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "organizationId",
            "description": "unique organization identifier",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "400": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "415": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "full"
            ]
          }
        ],
        "tags": [
          "source"
        ],
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::571451623975:role/npra-role-pushapi-gateway",
          "httpMethod": "POST",
          "requestTemplates": {
            "application/json": "{\n    \"content-type\": \"application/json\",\n    \"command\": \"UPDATE_SOURCE_STATUS\",\n    \"redisEndpoint\": \"$stageVariables.redisEndpoint\",\n    \"documentLogsDeliveryStreamName\": \"$stageVariables.documentLogsDeliveryStreamName\",\n    \"authorizationServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n    \"organizationServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n    \"accessToken\": \"$input.params('Authorization')\",\n    \"clientId\": \"$stageVariables.clientId\",\n    \"clientSecret\": \"$stageVariables.clientSecret\",\n    \"sourceServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n    \"organizationId\": \"$util.urlDecode($input.params('organizationId'))\",\n    \"sourceId\": \"$util.urlDecode($input.params('sourceId'))\",\n    \"statusType\": \"$input.params('statusType')\",\n    \"debug\": \"False\"\n}"
          },
          "responses": {
            "ACCESS_DENIED.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "403"
            },
            "An error occurred during JSON parsing|INVALID_JSON.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "400"
            },
            "INVALID_TOKEN.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "401"
            },
            "ORGANIZATION_NOT_FOUND.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "404"
            },
            "SOURCE_DOES_NOT_EXIST.*|MISSING_PARAMETER.*|INVALID_PARAMETER.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "412"
            },
            "UNSUPPORTED_MEDIA_TYPE.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "415"
            },
            "^$": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "201"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "500"
            }
          },
          "type": "aws",
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:571451623975:function:${stageVariables.lambdaName}/invocations"
        },
        "x-pretty-name": "setSourceStatus"
      }
    },
    "/{organizationId}/files": {
      "options": {
        "summary": {
          "type": "string"
        },
        "responses": {
          "200": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "tags": [
          "file"
        ],
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::571451623975:role/npra-role-pushapi-gateway",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Accept,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock"
        },
        "x-pretty-name": "getPresignedUploadUrl-OPTIONS"
      },
      "post": {
        "summary": "depricated",
        "parameters": [
          {
            "in": "path",
            "name": "organizationId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "400": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "415": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "full"
            ]
          }
        ],
        "tags": [
          "file"
        ],
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::571451623975:role/npra-role-pushapi-gateway",
          "httpMethod": "POST",
          "requestTemplates": {
            "application/json": "{\n    \"content-type\": \"application/json\",\n    \"command\": \"GET_PRESIGNED_UPLOAD_URL\",\n    \"redisEndpoint\": \"$stageVariables.redisEndpoint\",\n    \"documentLogsDeliveryStreamName\": \"$stageVariables.documentLogsDeliveryStreamName\",\n    \"authorizationServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n    \"organizationServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n    \"accessToken\": \"$input.params('Authorization')\",\n    \"clientId\": \"$stageVariables.clientId\",\n    \"clientSecret\": \"$stageVariables.clientSecret\",\n    \"organizationId\": \"$util.urlDecode($input.params('organizationId'))\",\n    \"blobstoreBucketName\": \"$stageVariables.blobstoreBucketName\",\n    \"debug\": \"False\"\n}"
          },
          "responses": {
            "ACCESS_DENIED.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "403"
            },
            "An error occurred during JSON parsing|INVALID_JSON.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "400"
            },
            "INVALID_TOKEN.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "401"
            },
            "ORGANIZATION_NOT_FOUND.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "404"
            },
            "SOURCE_DOES_NOT_EXIST.*|MISSING_PARAMETER.*|INVALID_PARAMETER.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "412"
            },
            "UNSUPPORTED_MEDIA_TYPE.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "415"
            },
            "^$": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "201"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "500"
            }
          },
          "type": "aws",
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:571451623975:function:${stageVariables.lambdaName}/invocations"
        },
        "x-pretty-name": "getPresignedUploadUrl"
      }
    },
    "/{organizationId}/{sourceId}/documents": {
      "delete": {
        "summary": "depricated",
        "parameters": [
          {
            "in": "query",
            "name": "orderingId",
            "required": false,
            "type": "string"
          },
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "documentId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "organizationId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "202": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "400": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "415": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "full"
            ]
          }
        ],
        "tags": [
          "document"
        ],
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::571451623975:role/npra-role-pushapi-gateway",
          "httpMethod": "POST",
          "requestTemplates": {
            "application/json": "{\n    \"content-type\": \"application/json\",\n    \"command\": \"DELETE_DOCUMENT\",\n    \"redisEndpoint\": \"$stageVariables.redisEndpoint\",\n    \"documentLogsDeliveryStreamName\": \"$stageVariables.documentLogsDeliveryStreamName\",\n    \"authorizationServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n    \"organizationServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n  \"accessToken\": \"$input.params('Authorization')\",\n  \"clientId\": \"$stageVariables.clientId\",\n  \"clientSecret\": \"$stageVariables.clientSecret\",\n  \"sourceServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n  \"queueUrl\": \"$stageVariables.queueUrl\",\n  \"organizationId\": \"$util.urlDecode($input.params('organizationId'))\",\n  \"sourceId\": \"$util.urlDecode($input.params('sourceId'))\",\n  \"documentId\": \"$input.params('documentId')\",\n    \"orderingId\": \"$input.params('orderingId')\",\n    \"debug\": \"False\"\n}"
          },
          "responses": {
            "ACCESS_DENIED.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "403"
            },
            "An error occurred during JSON parsing|INVALID_JSON.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "400"
            },
            "INVALID_TOKEN.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "401"
            },
            "ORGANIZATION_NOT_FOUND.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "404"
            },
            "SOURCE_DOES_NOT_EXIST.*|MISSING_PARAMETER.*|INVALID_PARAMETER.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "412"
            },
            "UNSUPPORTED_MEDIA_TYPE.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "415"
            },
            "^$": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "202"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "500"
            }
          },
          "type": "aws",
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:571451623975:function:${stageVariables.lambdaName}/invocations"
        },
        "x-pretty-name": "deleteDocument"
      },
      "options": {
        "summary": {
          "type": "string"
        },
        "responses": {
          "200": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "tags": [
          "document"
        ],
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::571451623975:role/npra-role-pushapi-gateway",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Accept,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock"
        },
        "x-pretty-name": "addUpdateDocument-OPTIONS"
      },
      "put": {
        "summary": "depricated",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "orderingId",
            "required": false,
            "type": "string"
          },
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "documentId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "organizationId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "DocumentBody",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentBody"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "202": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "400": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "415": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "full"
            ]
          }
        ],
        "tags": [
          "document"
        ],
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::571451623975:role/npra-role-pushapi-gateway",
          "httpMethod": "POST",
          "requestTemplates": {
            "application/json": "{\n    \"content-type\": \"application/json\",\n    \"command\": \"ADD_UPDATE_DOCUMENT\",\n    \"accessToken\": \"$input.params('Authorization')\",\n    \"redisEndpoint\": \"$stageVariables.redisEndpoint\",\n    \"documentLogsDeliveryStreamName\": \"$stageVariables.documentLogsDeliveryStreamName\",\n    \"authorizationServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n    \"organizationServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n    \"bucketName\": \"$stageVariables.bucketName\",\n    \"clientId\": \"$stageVariables.clientId\",\n    \"clientSecret\": \"$stageVariables.clientSecret\",\n    \"documentBody\": $input.json('$'),\n    \"documentId\": \"$input.params('documentId')\",\n    \"orderingId\": \"$input.params('orderingId')\",\n    \"organizationId\": \"$util.urlDecode($input.params('organizationId'))\",\n    \"queueUrl\": \"$stageVariables.queueUrl\",\n    \"sourceServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n    \"sourceId\": \"$util.urlDecode($input.params('sourceId'))\",\n    \"debug\": \"False\"\n}"
          },
          "responses": {
            "ACCESS_DENIED.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "403"
            },
            "An error occurred during JSON parsing|INVALID_JSON.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "400"
            },
            "INVALID_TOKEN.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "401"
            },
            "ORGANIZATION_NOT_FOUND.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "404"
            },
            "SOURCE_DOES_NOT_EXIST.*|MISSING_PARAMETER.*|INVALID_PARAMETER.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "412"
            },
            "UNSUPPORTED_MEDIA_TYPE.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "415"
            },
            "^$": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "202"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "500"
            }
          },
          "type": "aws",
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:571451623975:function:${stageVariables.lambdaName}/invocations"
        },
        "x-pretty-name": "addUpdateDocument"
      }
    },
    "/{organizationId}/{sourceId}/status": {
      "options": {
        "summary": {
          "type": "string"
        },
        "responses": {
          "200": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "tags": [
          "source"
        ],
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::571451623975:role/npra-role-pushapi-gateway",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Accept,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock"
        },
        "x-pretty-name": "setSourceStatus-OPTIONS"
      },
      "post": {
        "summary": "depricated",
        "parameters": [
          {
            "in": "query",
            "name": "statusType",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "organizationId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "400": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "415": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "full"
            ]
          }
        ],
        "tags": [
          "source"
        ],
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::571451623975:role/npra-role-pushapi-gateway",
          "httpMethod": "POST",
          "requestTemplates": {
            "application/json": "{\n    \"content-type\": \"application/json\",\n    \"command\": \"UPDATE_SOURCE_STATUS\",\n    \"redisEndpoint\": \"$stageVariables.redisEndpoint\",\n    \"documentLogsDeliveryStreamName\": \"$stageVariables.documentLogsDeliveryStreamName\",\n    \"authorizationServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n    \"organizationServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n    \"accessToken\": \"$input.params('Authorization')\",\n    \"clientId\": \"$stageVariables.clientId\",\n    \"clientSecret\": \"$stageVariables.clientSecret\",\n    \"sourceServerEndpoint\": \"$stageVariables.proxyEndpoint\",\n    \"organizationId\": \"$util.urlDecode($input.params('organizationId'))\",\n    \"sourceId\": \"$util.urlDecode($input.params('sourceId'))\",\n    \"statusType\": \"$input.params('statusType')\",\n    \"debug\": \"False\"\n}"
          },
          "responses": {
            "ACCESS_DENIED.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "403"
            },
            "An error occurred during JSON parsing|INVALID_JSON.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "400"
            },
            "INVALID_TOKEN.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "401"
            },
            "ORGANIZATION_NOT_FOUND.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "404"
            },
            "SOURCE_DOES_NOT_EXIST.*|MISSING_PARAMETER.*|INVALID_PARAMETER.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "412"
            },
            "UNSUPPORTED_MEDIA_TYPE.*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "415"
            },
            "^$": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "201"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, POST, PUT, DELETE, OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){  \"errorCode\" : \"$input.path('$.errorMessage').split(': ')[0]\",  \"message\" : \"$input.path('$.errorMessage').split(': ')[1]\"}"
              },
              "statusCode": "500"
            }
          },
          "type": "aws",
          "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:571451623975:function:${stageVariables.lambdaName}/invocations"
        },
        "x-pretty-name": "setSourceStatus"
      }
    }
  },
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "oauth2": {
      "authorizationUrl": "https://platform.cloud.coveo.com/oauth/authorize",
      "flow": "implicit",
      "scopes": {
        "full": "Required"
      },
      "type": "oauth2"
    }
  },
  "swagger": "2.0",
  "tags": [
    {
      "description": "File",
      "name": "file"
    },
    {
      "description": "Document",
      "name": "document"
    },
    {
      "description": "Identity",
      "name": "identity"
    },
    {
      "description": "Source status",
      "name": "source"
    },
    {
      "description": "API documentation",
      "name": "apidoc"
    }
  ]
}