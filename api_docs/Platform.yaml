---
swagger: '2.0'
info:
  description: API for Coveo Platform
  title: Coveo Platform API
  termsOfService: Coveo API terms of service
  contact:
    name: Coveo
    url: www.coveo.com
    email: support@coveo.com
  license: {}
host: platform.cloud.coveo.com:443
basePath: "/"
tags:
- name: Organizations
  description: Organization Service Resource
- name: AWS
  description: AWS Service Resource
- name: License Templates
  description: License Template Service Resource
- name: Organization Operations
  description: Organization Operation Service Resource
- name: Organizations Infrastructure
  description: Infrastructure Organization Service Resource
- name: Exception Logging
  description: Exception Logging Service Resource
- name: Organization Clusters
  description: Organization Cluster Service Resource
- name: License
  description: License Service Resource
- name: Organizations Exports
  description: Exports Resource
- name: Nodes
  description: Organization Node Service Resource
- name: Packages
  description: Package Service Resource
- name: Organization Templates
  description: Organization Template Service Resource
- name: Agents
  description: Organization Agent Service Resource
paths:
  "/rest/aws/instances/agents":
    get:
      tags:
      - AWS
      summary: Get the agent machines
      description: Get the list of instance that are agents
      operationId: getAgentsUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/AWSAgentInstanceModel"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: getAgents
  "/rest/some/new/call1":
    get:
      tags:
      - AWS
      summary: Some new call 1 summary
      description: Some new call 1 description
      operationId: someNewCall1UsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/AWSAgentInstanceModel"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: getSomeNewCall1
  "/rest/aws/instances/agents/{agentId}":
    get:
      tags:
      - AWS
      summary: Get a specific agent
      description: Get a specific agent
      operationId: getAgentUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: agentId
        in: path
        description: id of the agent
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/AWSAgentInstanceModel"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: getAgent
  "/rest/backups":
    get:
      tags:
      - Organization Operations
      summary: Lists the available backups of the environment
      operationId: getBackupsUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/OrganizationBackupModel"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      deprecated: true
      x-pretty-name: getBackups
  "/rest/backups/organizations/page":
    get:
      tags:
      - Organization Operations
      summary: Get a page of the list of organizations with available backups
      operationId: getOrganizationsWithBackupsPageUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: page
        in: query
        description: page
        required: false
        type: integer
        default: 0
        format: int32
      - name: perPage
        in: query
        description: perPage
        required: false
        type: integer
        default: 100
        format: int32
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/PageModel«string»"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: getOrganizationsWithBackupsPage
  "/rest/backups/page":
    get:
      tags:
      - Organization Operations
      summary: Get a page of the list of available backups for the environment
      operationId: getBackupPageUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: query
        description: organizationId
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: filter
        in: query
        description: filter
        required: false
        type: string
      - name: from
        in: query
        description: from
        required: false
        type: integer
        format: int64
      - name: to
        in: query
        description: to
        required: false
        type: integer
        format: int64
      - name: sortBy
        in: query
        description: sortBy
        required: false
        type: string
        default: backupName
      - name: order
        in: query
        description: order
        required: false
        type: string
        default: asc
      - name: page
        in: query
        description: page
        required: false
        type: integer
        default: 0
        format: int32
      - name: perPage
        in: query
        description: perPage
        required: false
        type: integer
        default: 100
        format: int32
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/OrganizationBackupModel"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: getBackupPage
  "/rest/import":
    post:
      tags:
      - Organization Operations
      summary: Imports an existing backup into a new organization
      operationId: importBackupUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: backupName
        in: query
        description: Name of the backup
        required: false
        type: string
      - name: launchProvisioning
        in: query
        description: Whether to launch provisioning at the end or not
        required: false
        type: boolean
        default: false
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: importBackup
  "/rest/infrastructure/organizations":
    post:
      tags:
      - Organizations Infrastructure
      summary: Create an organization with specific machine architecture
      operationId: internalCreateOrganizationUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: name
        in: query
        description: name
        required: true
        type: string
      - name: owner
        in: query
        description: owner
        required: false
        type: string
      - name: licenseTemplate
        in: query
        description: licenseTemplate
        required: false
        type: string
      - name: organizationTemplate
        in: query
        description: organizationTemplate
        required: false
        type: string
      - in: body
        name: organizationCreationModel
        description: organizationCreationModel
        required: true
        schema:
          "$ref": "#/definitions/OrganizationCreationModel"
      responses:
        '201':
          description: Created
          schema:
            "$ref": "#/definitions/OrganizationCreatedModel"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: internalCreateOrganization
  "/rest/infrastructure/organizations/readonly":
    put:
      tags:
      - Organizations Infrastructure
      summary: Set organizations in read-only or read-write
      operationId: setReadOnlyUsingPUT
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: readOnly
        in: query
        description: readOnly
        required: true
        type: boolean
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: setReadOnly
  "/rest/licensetemplates":
    get:
      tags:
      - License Templates
      summary: Get all license templates
      operationId: getLicenseTemplatesUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/LicenseTemplateModel"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: getLicenseTemplates
    post:
      tags:
      - License Templates
      summary: Create a new license template
      operationId: createLicenseTemplateUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - in: body
        name: licenseTemplate
        description: licenseTemplate
        required: true
        schema:
          "$ref": "#/definitions/LicenseTemplateModel"
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: createLicenseTemplate
  "/rest/licensetemplates/{templateName}":
    get:
      tags:
      - License Templates
      summary: Get a license template
      operationId: getLicenseTemplateUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: templateName
        in: path
        description: Name of the license template
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/LicenseTemplateModel"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: getLicenseTemplate
    put:
      tags:
      - License Templates
      summary: Update a license template
      operationId: updateLicenseTemplateUsingPUT
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: templateName
        in: path
        description: Name of the license template
        required: true
        type: string
      - in: body
        name: licenseTemplate
        description: licenseTemplate
        required: true
        schema:
          "$ref": "#/definitions/LicenseTemplateModel"
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: updateLicenseTemplate
    delete:
      tags:
      - License Templates
      summary: Delete a license template
      operationId: deleteLicenseTemplateUsingDELETE
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: templateName
        in: path
        description: Name of the license template
        required: true
        type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
      - oauth2:
        - full
      x-pretty-name: deleteLicenseTemplate
  "/rest/logging":
    post:
      tags:
      - Exception Logging
      summary: Logs an exception
      operationId: logExceptionUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - in: body
        name: exceptionLogModel
        description: exceptionLogModel
        required: true
        schema:
          "$ref": "#/definitions/ExceptionLogModel"
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/JsonStringIdWrapper"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: logException
  "/rest/organizations":
    get:
      tags:
      - Organizations
      summary: Gets all organizations
      operationId: getOrganizationsUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: additionalFields
        in: query
        description: additionalFields
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: filter
        in: query
        description: filter
        required: false
        type: string
      - name: sortBy
        in: query
        description: sortBy
        required: false
        type: string
        default: displayName
      - name: order
        in: query
        description: order
        required: false
        type: string
        default: ASC
      - name: page
        in: query
        description: page
        required: false
        type: integer
        default: 0
        format: int32
      - name: perPage
        in: query
        description: perPage
        required: false
        type: integer
        default: 100
        format: int32
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/OrganizationModel"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: getOrganizations
    post:
      tags:
      - Organizations
      summary: Create an organization
      operationId: createOrganizationUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: name
        in: query
        description: name
        required: true
        type: string
      - name: owner
        in: query
        description: owner
        required: false
        type: string
      - name: licenseTemplate
        in: query
        description: licenseTemplate
        required: false
        type: string
      - name: organizationTemplate
        in: query
        description: organizationTemplate
        required: false
        type: string
      responses:
        '201':
          description: Created
          schema:
            "$ref": "#/definitions/OrganizationCreatedModel"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: createOrganization
  "/rest/organizations/license/sync":
    post:
      tags:
      - License
      summary: Syncs all licenses with the default license. Adjusts available connectors,
        allowed schedules and visibilities.
      operationId: syncWithDefaultLicenseGlobalUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      responses:
        '201':
          description: Created
          schema:
            "$ref": "#/definitions/JsonStringIdWrapper"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: syncWithDefaultLicenseGlobal
  "/rest/organizations/{organizationId}":
    get:
      tags:
      - Organizations
      summary: Get a single organization
      operationId: getOrganizationUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: organizationId
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/OrganizationModel"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: getOrganization
    put:
      tags:
      - Organizations
      summary: Updates a single organization
      operationId: updateOrganizationUsingPUT
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: organizationId
        required: true
        type: string
      - in: body
        name: organizationModel
        description: organizationModel
        required: true
        schema:
          "$ref": "#/definitions/OrganizationModel"
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: updateOrganization
    delete:
      tags:
      - Organizations
      summary: Delete an organization
      operationId: deleteOrganizationUsingDELETE
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: organizationId
        required: true
        type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
      - oauth2:
        - full
      x-pretty-name: deleteOrganization
  "/rest/organizations/{organizationId}/backups":
    get:
      tags:
      - Organization Operations
      summary: Lists the available backups for an organization
      operationId: getOrganizationBackupsUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: Name of the organization
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/OrganizationBackupModel"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: getOrganizationBackups
    post:
      tags:
      - Organization Operations
      summary: Backups the content of an organization
      operationId: backupOrganizationUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: Id of the organization
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/JsonStringIdWrapper"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: backupOrganization
  "/rest/organizations/{organizationId}/clusters":
    get:
      tags:
      - Organization Clusters
      summary: Get all clusters for organization
      operationId: getOrganizationClustersUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: organizationId
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/OrganizationClusterModel"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: getOrganizationClusters
  "/rest/organizations/{organizationId}/clusters/live":
    get:
      tags:
      - Organization Clusters
      summary: Get live cluster for organization
      operationId: getOrganizationLiveClusterUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: organizationId
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/OrganizationClusterModel"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: getOrganizationLiveCluster
  "/rest/organizations/{organizationId}/clusters/{organizationClusterId}/agents":
    get:
      tags:
      - Agents
      summary: Get all the agents of an organization cluster
      operationId: getAgentsUsingGET_1
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: organizationId
        required: true
        type: string
      - name: organizationClusterId
        in: path
        description: organizationClusterId
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/AgentModel"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: getAgents
  "/rest/organizations/{organizationId}/clusters/{organizationClusterId}/agents/{agentId}":
    get:
      tags:
      - Agents
      summary: Get a single agent
      operationId: getAgentUsingGET_1
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: organizationId
        required: true
        type: string
      - name: organizationClusterId
        in: path
        description: organizationClusterId
        required: true
        type: string
      - name: agentId
        in: path
        description: agentId
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/AgentModel"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: getAgent
    delete:
      tags:
      - Agents
      summary: Unregisters an agent
      operationId: unregisterAgentUsingDELETE
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: organizationId
        required: true
        type: string
      - name: organizationClusterId
        in: path
        description: organizationClusterId
        required: true
        type: string
      - name: agentId
        in: path
        description: agentId
        required: true
        type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
      - oauth2:
        - full
      x-pretty-name: unregisterAgent
  "/rest/organizations/{organizationId}/clusters/{organizationClusterId}/agents/{agentId}/dump":
    post:
      tags:
      - Agents
      summary: Dumps an agent
      operationId: dumpAgentUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: organizationId
        required: true
        type: string
      - name: organizationClusterId
        in: path
        description: organizationClusterId
        required: true
        type: string
      - name: agentId
        in: path
        description: agentId
        required: true
        type: string
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: dumpAgent
  "/rest/organizations/{organizationId}/clusters/{organizationClusterId}/agents/{agentId}/upgrade":
    put:
      tags:
      - Agents
      summary: Upgrades all nodes of the provided component on the specified agent
      operationId: upgradeAgentNodesUsingPUT
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: organizationId
        required: true
        type: string
      - name: organizationClusterId
        in: path
        description: organizationClusterId
        required: true
        type: string
      - name: agentId
        in: path
        description: agentId
        required: true
        type: string
      - in: body
        name: version
        description: version
        required: true
        schema:
          "$ref": "#/definitions/VersionModel"
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: upgradeAgentNodes
  "/rest/organizations/{organizationId}/clusters/{organizationClusterId}/nodes":
    get:
      tags:
      - Nodes
      summary: Get all nodes of an organization cluster
      operationId: getOrganizationNodesUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: organizationId
        required: true
        type: string
      - name: organizationClusterId
        in: path
        description: organizationClusterId
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/NodeModel"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: getOrganizationNodes
  "/rest/organizations/{organizationId}/clusters/{organizationClusterId}/nodes/start":
    post:
      tags:
      - Nodes
      summary: Start all nodes of the organization cluster
      operationId: startNodesUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: organizationId
        required: true
        type: string
      - name: organizationClusterId
        in: path
        description: organizationClusterId
        required: true
        type: string
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: startNodes
  "/rest/organizations/{organizationId}/clusters/{organizationClusterId}/nodes/stop":
    post:
      tags:
      - Nodes
      summary: Stop all nodes of the organization
      operationId: stopNodesUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: organizationId
        required: true
        type: string
      - name: organizationClusterId
        in: path
        description: organizationClusterId
        required: true
        type: string
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: stopNodes
  "/rest/organizations/{organizationId}/clusters/{organizationClusterId}/nodes/{nodeId}/dumps":
    post:
      tags:
      - Nodes
      summary: Generate dumps for a node
      operationId: generateDumpsUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: organizationId
        required: true
        type: string
      - name: organizationClusterId
        in: path
        description: organizationClusterId
        required: true
        type: string
      - name: nodeId
        in: path
        description: nodeId
        required: true
        type: string
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: generateDumps
  "/rest/organizations/{organizationId}/clusters/{organizationClusterId}/nodes/{nodeId}/start":
    post:
      tags:
      - Nodes
      summary: Start a node
      operationId: startNodeUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: organizationId
        required: true
        type: string
      - name: organizationClusterId
        in: path
        description: organizationClusterId
        required: true
        type: string
      - name: nodeId
        in: path
        description: nodeId
        required: true
        type: string
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: startNode
  "/rest/organizations/{organizationId}/clusters/{organizationClusterId}/nodes/{nodeId}/stop":
    post:
      tags:
      - Nodes
      summary: Stop a node
      operationId: stopNodeUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: organizationId
        required: true
        type: string
      - name: organizationClusterId
        in: path
        description: organizationClusterId
        required: true
        type: string
      - name: nodeId
        in: path
        description: nodeId
        required: true
        type: string
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: stopNode
  "/rest/organizations/{organizationId}/clusters/{organizationClusterId}/nodes/{nodeId}/upgrade":
    put:
      tags:
      - Nodes
      summary: Upgrade a node
      operationId: upgradeNodeUsingPUT
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: organizationId
        required: true
        type: string
      - name: organizationClusterId
        in: path
        description: organizationClusterId
        required: true
        type: string
      - name: nodeId
        in: path
        description: nodeId
        required: true
        type: string
      - in: body
        name: version
        description: version
        required: true
        schema:
          "$ref": "#/definitions/VersionModel"
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: upgradeNode
  "/rest/organizations/{organizationId}/clusters/{organizationClusterId}/nodes/{nodeId}/upgrades":
    get:
      tags:
      - Nodes
      summary: Get all upgrade possibilities of a node
      operationId: getNodeUpgradesUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: organizationId
        required: true
        type: string
      - name: organizationClusterId
        in: path
        description: organizationClusterId
        required: true
        type: string
      - name: nodeId
        in: path
        description: nodeId
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/NodeModel"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: getNodeUpgrades
  "/rest/organizations/{organizationId}/clusters/{organizationClusterId}/status":
    get:
      tags:
      - Organization Clusters
      summary: Get an organization cluster provisioning status
      operationId: getProvisioningStatusUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: organizationId
        required: true
        type: string
      - name: organizationClusterId
        in: path
        description: organizationClusterId
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/ProvisioningStatusModel"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: getProvisioningStatus
  "/rest/organizations/{organizationId}/clusters/{organizationClusterId}/synchronize":
    post:
      tags:
      - Organization Clusters
      summary: Synchronize an organization cluster
      operationId: synchronizeClusterUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: organizationId
        required: true
        type: string
      - name: organizationClusterId
        in: path
        description: organizationClusterId
        required: true
        type: string
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: synchronizeCluster
  "/rest/organizations/{organizationId}/clusters/{organizationClusterId}/versions":
    get:
      tags:
      - Organization Clusters
      summary: Get the component versions for organization cluster
      operationId: getOrganizationClusterComponentVersionsUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: organizationId
        required: true
        type: string
      - name: organizationClusterId
        in: path
        description: organizationClusterId
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/OrganizationComponentsModel"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: getOrganizationClusterComponentVersions
    put:
      tags:
      - Organization Clusters
      summary: Set the component versions for organization cluster
      operationId: setOrganizationClusterComponentVersionsUsingPUT
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: organizationId
        required: true
        type: string
      - name: organizationClusterId
        in: path
        description: organizationClusterId
        required: true
        type: string
      - in: body
        name: versions
        description: versions
        required: true
        schema:
          "$ref": "#/definitions/OrganizationComponentsModel"
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: setOrganizationClusterComponentVersions
  "/rest/organizations/{organizationId}/duplicate":
    post:
      tags:
      - Organization Operations
      summary: Duplicates an organization
      operationId: duplicateOrganizationUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: Id of the organization
        required: true
        type: string
      - name: newOrganizationName
        in: query
        description: Name of the new organization
        required: true
        type: string
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: duplicateOrganization
  "/rest/organizations/{organizationId}/exports/logins":
    get:
      tags:
      - Organizations Exports
      summary: Get the login activity for the organization.
      operationId: getLoginsExportUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: organizationId
        required: true
        type: string
      - name: numberOfDays
        in: query
        description: numberOfDays
        required: false
        type: integer
        default: 31
        format: int32
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: getLoginsExport
  "/rest/organizations/{organizationId}/launchprovisioning":
    post:
      tags:
      - Organizations
      summary: Launches the provisioning of an organization
      operationId: launchProvisioningUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: organizationId
        required: true
        type: string
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: launchProvisioning
  "/rest/organizations/{organizationId}/license":
    get:
      tags:
      - License
      summary: Get the organization's license
      operationId: getLicenseUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: Id of the organization
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/LicenseModel"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: getLicense
    put:
      tags:
      - License
      summary: Update the organization's license
      operationId: updateLicenseUsingPUT
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: Id of the organization
        required: true
        type: string
      - in: body
        name: license
        description: license
        required: true
        schema:
          "$ref": "#/definitions/LicenseModel"
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: updateLicense
  "/rest/organizations/{organizationId}/license/snapshots/{snapshotId}":
    get:
      tags:
      - License
      summary: Gets a license snapshot
      operationId: getSnapshotUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: Id of the organization
        required: false
        type: string
      - name: snapshotId
        in: path
        description: snapshotId
        required: false
        type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: getSnapshot
  "/rest/organizations/{organizationId}/license/sync":
    post:
      tags:
      - License
      summary: Syncs a license with the default license. Adjusts available connectors,
        allowed schedules and visibilities.
      operationId: syncWithDefaultLicenseUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: Id of the organization
        required: true
        type: string
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: syncWithDefaultLicense
  "/rest/organizations/{organizationId}/license/template":
    put:
      tags:
      - License
      summary: Apply a license template to the organization
      operationId: applyTemplateUsingPUT
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: Id of the organization
        required: true
        type: string
      - in: body
        name: licenseTemplate
        description: licenseTemplate
        required: true
        schema:
          "$ref": "#/definitions/JsonStringIdWrapper"
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: applyTemplate
  "/rest/organizations/{organizationId}/license/{sectionName}":
    get:
      tags:
      - License
      summary: Get an organization license section
      operationId: getLicenseSectionUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: Id of the organization
        required: true
        type: string
      - name: sectionName
        in: path
        description: sectionName
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: getLicenseSection
    put:
      tags:
      - License
      summary: Update a section of the license
      operationId: updateLicenseSectionUsingPUT
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: Id of the organization
        required: true
        type: string
      - name: sectionName
        in: path
        description: sectionName
        required: true
        type: string
      - in: body
        name: licenseSection
        description: licenseSection
        required: true
        schema:
          type: object
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: updateLicenseSection
    delete:
      tags:
      - License
      summary: Deletes a section of the license
      operationId: deleteLicenseSectionUsingDELETE
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: Id of the organization
        required: true
        type: string
      - name: sectionName
        in: path
        description: sectionName
        required: true
        type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
      - oauth2:
        - full
      x-pretty-name: deleteLicenseSection
  "/rest/organizations/{organizationId}/readonly":
    put:
      tags:
      - Organizations
      summary: Set an organization in read-only or read-write
      operationId: setReadOnlyUsingPUT_1
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: organizationId
        required: true
        type: string
      - name: readOnly
        in: query
        description: readOnly
        required: true
        type: boolean
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: setReadOnly
  "/rest/organizations/{organizationId}/recover":
    post:
      tags:
      - Organization Operations
      summary: Recovers an organization by recreating its constituents from scratch
      operationId: recoverOrganizationUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: Name of the organization
        required: true
        type: string
      - name: rebuildSources
        in: query
        description: Whether to rebuild the sources at the end of recover operation
        required: false
        type: boolean
        default: false
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: recoverOrganization
  "/rest/organizations/{organizationId}/resetTopology":
    post:
      tags:
      - Organizations
      summary: Resets the topology of a non-provisioned organization
      operationId: resetTopologyUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: organizationId
        required: true
        type: string
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: resetTopology
  "/rest/organizations/{organizationId}/restore":
    post:
      tags:
      - Organization Operations
      summary: Restores a backup of an existing organization
      operationId: restoreOrganizationUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: Name of the organization
        required: true
        type: string
      - name: backupName
        in: query
        description: Name of the backup
        required: true
        type: string
      - name: launchRecover
        in: query
        description: Whether to launch recover of the organization or not
        required: false
        type: boolean
        default: false
      - name: rebuildSources
        in: query
        description: Whether to rebuild the sources at the end of recover operation
        required: false
        type: boolean
        default: false
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: restoreOrganization
  "/rest/organizations/{organizationId}/status":
    get:
      tags:
      - Organizations
      summary: Get the organization status
      operationId: getOrganizationStatusUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: organizationId
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/OrganizationStatusModel"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: getOrganizationStatus
  "/rest/organizations/{organizationId}/support":
    put:
      tags:
      - Organizations
      summary: Change the organization support status
      operationId: changeSupportStatusUsingPUT
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: organizationId
        required: true
        type: string
      - name: activate
        in: query
        description: activate
        required: true
        type: boolean
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: changeSupportStatus
  "/rest/organizations/{organizationId}/template/{templateName}":
    put:
      tags:
      - Organizations
      summary: Apply an organization template to an organization
      operationId: applyOrganizationTemplateUsingPUT
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: organizationId
        in: path
        description: organizationId
        required: true
        type: string
      - name: templateName
        in: path
        description: templateName
        required: true
        type: string
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: applyOrganizationTemplate
  "/rest/organizationtemplates":
    get:
      tags:
      - Organization Templates
      summary: Get all organization templates
      operationId: getOrganizationTemplatesUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/OrganizationTemplateModel"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: getOrganizationTemplates
    post:
      tags:
      - Organization Templates
      summary: Creates an organization template
      operationId: createOrganizationTemplateUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - in: body
        name: organizationTemplate
        description: organizationTemplate
        required: true
        schema:
          "$ref": "#/definitions/OrganizationTemplateModel"
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: createOrganizationTemplate
  "/rest/organizationtemplates/{templateName}":
    get:
      tags:
      - Organization Templates
      summary: Get an organization template
      operationId: getOrganizationTemplateUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: templateName
        in: path
        description: templateName
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/OrganizationTemplateModel"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: getOrganizationTemplate
    put:
      tags:
      - Organization Templates
      summary: Update an organization template
      operationId: updateOrganizationTemplateUsingPUT
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: templateName
        in: path
        description: templateName
        required: true
        type: string
      - in: body
        name: organizationTemplate
        description: organizationTemplate
        required: true
        schema:
          "$ref": "#/definitions/OrganizationTemplateModel"
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: updateOrganizationTemplate
    delete:
      tags:
      - Organization Templates
      summary: Delete an organization template
      operationId: deleteOrganizationTemplateUsingDELETE
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: templateName
        in: path
        description: templateName
        required: true
        type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
      - oauth2:
        - full
      x-pretty-name: deleteOrganizationTemplate
  "/rest/packages":
    get:
      tags:
      - Packages
      summary: Get the list of all component information
      operationId: getComponentInfoListUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/ComponentInfoModel"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: getComponentInfoList
  "/rest/packages/versions":
    get:
      tags:
      - Packages
      summary: Get the list of all the available components and their versions
      operationId: getAvailableComponentListUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/ComponentInfoModel"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
      - oauth2:
        - full
      x-pretty-name: getAvailableComponentList
securityDefinitions:
  oauth2:
    type: oauth2
    authorizationUrl: https://platform.cloud.coveo.com/oauth/authorize
    flow: implicit
    scopes:
      full: Required
definitions:
  MachineSpecModel:
    type: object
    properties:
      architecture:
        type: string
        enum:
        - T2_NANO
        - T2_MICRO
        - T2_SMALL
        - T2_MEDIUM
        - T2_LARGE
        - T2_XLARGE
        - T2_2XLARGE
        - M3_MEDIUM
        - M3_LARGE
        - M3_XLARGE
        - M3_2XLARGE
        - C3_LARGE
        - C3_XLARGE
        - C3_2XLARGE
        - C3_4XLARGE
        - C3_8XLARGE
        - R3_LARGE
        - R3_XLARGE
        - R3_2XLARGE
        - R3_4XLARGE
        - R3_8XLARGE
        - R4_LARGE
        - R4_XLARGE
        - R4_2XLARGE
        - R4_4XLARGE
        - R4_8XLARGE
        - R4_16XLARGE
        - M4_LARGE
        - M4_XLARGE
        - M4_2XLARGE
        - M4_4XLARGE
        - M4_10XLARGE
        - C4_LARGE
        - C4_XLARGE
        - C4_2XLARGE
        - C4_4XLARGE
        - C4_8XLARGE
      storageSpec:
        "$ref": "#/definitions/StorageSpecModel"
  NodeStatusModel:
    type: object
    properties:
      message:
        type: string
      severity:
        type: string
      status:
        type: string
      timestamp:
        type: string
  OrganizationComponentsModel:
    type: object
    properties:
      connectorsVersion:
        type: string
      indexerVersion:
        type: string
      securityCacheVersion:
        type: string
      securityProviderVersion:
        type: string
  PageModel«OrganizationModel»:
    type: object
    properties:
      items:
        type: array
        items:
          "$ref": "#/definitions/OrganizationModel"
      totalEntries:
        type: integer
        format: int64
      totalPages:
        type: integer
        format: int32
  InstanceInfoModel:
    type: object
    properties:
      description:
        type: string
      name:
        type: string
      parameters:
        type: array
        items:
          type: string
  StackTraceElement:
    type: object
    properties:
      fileName:
        type: string
      lineNumber:
        type: integer
        format: int32
      methodName:
        type: string
  OrganizationOwnerModel:
    type: object
    properties:
      email:
        type: string
  AWSInstanceModel:
    type: object
    properties:
      amiId:
        type: string
      id:
        type: string
      instanceState:
        type: string
        enum:
        - pending
        - running
        - shutting-down
        - terminated
        - stopping
        - stopped
      instanceType:
        type: string
      launchTime:
        type: string
        format: date-time
      platform:
        type: string
        enum:
        - windows
        - otherLinux
      privateDNS:
        type: string
      privateIPAddress:
        type: string
      publicDNS:
        type: string
      publicIP:
        type: string
  AWSAgentInstanceModel:
    type: object
    properties:
      agentId:
        type: string
      amiId:
        type: string
      id:
        type: string
      instanceState:
        type: string
        enum:
        - pending
        - running
        - shutting-down
        - terminated
        - stopping
        - stopped
      instanceType:
        type: string
      launchTime:
        type: string
        format: date-time
      platform:
        type: string
        enum:
        - windows
        - otherLinux
      privateDNS:
        type: string
      privateIPAddress:
        type: string
      publicDNS:
        type: string
      publicIP:
        type: string
  UserModel:
    type: object
    properties:
      additionalInformation:
        type: object
        additionalProperties:
          type: string
      credentialsExpired:
        type: boolean
      displayName:
        type: string
      email:
        type: string
      emailAliases:
        type: array
        items:
          type: string
      enabled:
        type: boolean
      expired:
        type: boolean
      lastLogin:
        type: integer
        format: int64
      locked:
        type: boolean
      provider:
        type: string
        enum:
        - SALESFORCE
        - SALESFORCE_SANDBOX
        - GOOGLE
        - OFFICE365
        - SAML
        - OTHER
      providerUsername:
        type: string
      realms:
        type: array
        items:
          "$ref": "#/definitions/UserRealmModel"
      samlIdentityProviderId:
        type: string
      socialUser:
        type: boolean
      username:
        type: string
  RealmModel:
    type: object
    properties:
      displayName:
        type: string
      id:
        type: string
      provider:
        type: string
        enum:
        - SALESFORCE
        - SALESFORCE_SANDBOX
        - GOOGLE
        - OFFICE365
        - SAML
        - OTHER
  LicenseTemplateModel:
    type: object
    properties:
      additionalInfo:
        type: string
      allowedSourceTypes:
        type: array
        items:
          type: string
      monitoringLevel:
        type: string
      name:
        type: string
      productName:
        type: string
        enum:
        - COVEO_CLOUD
        - DYNAMICS
        - SALESFORCE
        - SITECORE
      properties:
        type: object
      publicTemplate:
        type: boolean
      validityPeriodInDays:
        type: integer
        format: int32
  AgentModel:
    type: object
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
      platform:
        type: string
      status:
        "$ref": "#/definitions/NodeStatusModel"
      version:
        type: string
  OrganizationTemplateModel:
    type: object
    properties:
      apiKeyTemplate:
        type: string
      licenseTemplateName:
        type: string
      name:
        type: string
      privilegeMaskId:
        type: string
      publicTemplate:
        type: boolean
  NodeModel:
    type: object
    properties:
      adminURI:
        type: string
      agentId:
        type: string
      componentName:
        type: string
      id:
        type: string
      indexId:
        type: string
      instanceType:
        type: string
      isCustom:
        type: boolean
      latestVersion:
        type: string
      name:
        type: string
      params:
        type: object
        additionalProperties:
          type: string
      status:
        "$ref": "#/definitions/NodeStatusModel"
      version:
        type: string
  OrganizationClusterModel:
    type: object
    properties:
      clusterTopology:
        "$ref": "#/definitions/ClusterTopologyModel"
      componentVersions:
        "$ref": "#/definitions/OrganizationComponentsModel"
      id:
        type: string
      liveCluster:
        type: boolean
      organizationId:
        type: string
  ClusterAgentModel:
    type: object
    properties:
      id:
        type: string
      machineSpec:
        "$ref": "#/definitions/MachineSpecModel"
      storages:
        type: array
        items:
          "$ref": "#/definitions/StorageSpecModel"
  ProvisioningStatusModel:
    type: object
    properties:
      currentProvisioningProgress:
        type: number
        format: float
      initialProvisioningDone:
        type: boolean
      lastProvisioningCompletedDate:
        type: integer
        format: int64
      ongoing:
        type: boolean
      resources:
        type: array
        items:
          "$ref": "#/definitions/ProvisioningResourceStatusModel"
      retryScheduled:
        type: boolean
      status:
        type: string
        enum:
        - ERROR
        - HEALTHY
  OrganizationStatusModel:
    type: object
    properties:
      provisioningStatus:
        "$ref": "#/definitions/LightProvisioningStatusModel"
      readOnly:
        type: boolean
      supportActivated:
        type: boolean
  OrganizationModel:
    type: object
    properties:
      createdDate:
        type: integer
        format: int64
      displayName:
        type: string
      emailNotificationsEnabled:
        type: boolean
      id:
        type: string
      license:
        "$ref": "#/definitions/LicenseModel"
      owner:
        "$ref": "#/definitions/OrganizationOwnerModel"
      provisioningStatus:
        "$ref": "#/definitions/LightProvisioningStatusModel"
      readOnly:
        type: boolean
  ExceptionLogModel:
    type: object
    properties:
      culprit:
        type: string
      errorMessage:
        type: string
      extras:
        type: object
      platform:
        type: string
      serverName:
        type: string
      stackTrace:
        type: array
        items:
          "$ref": "#/definitions/StackTraceElement"
      tags:
        type: object
        additionalProperties:
          type: string
  ProvisioningResourceStatusModel:
    type: object
    properties:
      createdDate:
        type: integer
        format: int64
      error:
        type: string
      id:
        type: string
      name:
        type: string
      numberOfRetries:
        type: integer
        format: int32
      status:
        type: string
        enum:
        - QUEUED_TO_CREATE
        - QUEUED_TO_REMOVE
        - CREATING
        - REMOVING
        - PAUSED
        - COMPLETED
        - ERROR
      type:
        type: string
  ApiKeyModel:
    type: object
    properties:
      allowedIps:
        type: array
        items:
          type: string
      createdBy:
        "$ref": "#/definitions/UserModel"
      createdDate:
        type: string
        format: date-time
      deniedIps:
        type: array
        items:
          type: string
      description:
        type: string
      displayName:
        type: string
      enabled:
        type: boolean
      id:
        type: string
      organizationId:
        type: string
      privileges:
        type: array
        items:
          "$ref": "#/definitions/PrivilegeModel"
      value:
        type: string
  OrganizationBackupModel:
    type: object
    properties:
      backupName:
        type: string
      creationDate:
        type: string
        format: date-time
      organizationId:
        type: string
      size:
        type: integer
        format: int64
  ComponentInfoModel:
    type: object
    properties:
      description:
        type: string
      instances:
        type: array
        items:
          "$ref": "#/definitions/InstanceInfoModel"
      name:
        type: string
      platform:
        type: string
      target:
        type: string
      version:
        type: string
  ClusterSecurityCacheModel:
    type: object
    properties:
      adminPort:
        type: integer
        format: int32
      adminUri:
        type: string
      agentId:
        type: string
      componentName:
        type: string
      componentPlatform:
        type: string
      componentVersion:
        type: string
      id:
        type: string
      name:
        type: string
      secCacheSyncUri:
        type: string
  ComponentInfoModel2:
    type: object
    properties:
      name:
        type: string
      platform:
        type: string
      version:
        type: string
  ClusterTopologyModel:
    type: object
    properties:
      agents:
        type: array
        items:
          "$ref": "#/definitions/ClusterAgentModel"
      blobstoreUri:
        type: string
      crawlers:
        type: array
        items:
          "$ref": "#/definitions/ClusterCrawlerModel"
      dpmDocUri:
        type: string
      indexDocUri:
        type: string
      indexerMgrRateUri:
        type: string
      indexerMgrTagUri:
        type: string
      indexers:
        type: array
        items:
          "$ref": "#/definitions/ClusterIndexerModel"
      rabbitServerId:
        type: string
      secCacheJobUri:
        type: string
      secClusterSyncUri:
        type: string
      securityCaches:
        type: array
        items:
          "$ref": "#/definitions/ClusterSecurityCacheModel"
      securityProviders:
        type: array
        items:
          "$ref": "#/definitions/ClusterSecurityProviderModel"
      topologyId:
        type: string
  LicenseModel:
    type: object
    properties:
      additionalInfo:
        type: string
      connectors:
        type: array
        items:
          "$ref": "#/definitions/ConnectorInformationModel"
      expirationDate:
        type: integer
        format: int64
      monitoringLevel:
        type: string
      productName:
        type: string
        enum:
        - COVEO_CLOUD
        - DYNAMICS
        - SALESFORCE
        - SITECORE
      properties:
        type: object
      type:
        type: string
  OrganizationCreationModel:
    type: object
    properties:
      forceWindowsAgent:
        type: boolean
      machineSpec:
        "$ref": "#/definitions/MachineSpecModel"
      organizationComponents:
        "$ref": "#/definitions/OrganizationComponentsModel"
  StorageSpecModel:
    type: object
    properties:
      numberOfIops:
        type: integer
        format: int32
      sizeInGibibytes:
        type: integer
        format: int32
      sizeInGigabytes:
        type: integer
        format: int32
      storageType:
        type: string
        enum:
        - STANDARD
        - SSD
        - PROVISIONED_SSD
  LightProvisioningStatusModel:
    type: object
    properties:
      currentProvisioningProgress:
        type: number
        format: float
      initialProvisioningDone:
        type: boolean
      lastProvisioningCompletedDate:
        type: integer
        format: int64
      ongoing:
        type: boolean
      status:
        type: string
        enum:
        - ERROR
        - HEALTHY
  AllowedScheduleModel:
    type: object
    properties:
      refreshType:
        type: string
        enum:
        - REBUILD
        - FULL_REFRESH
        - INCREMENTAL_REFRESH
        - DELETION
        - SECURITY_CACHE_REFRESH
        - SECURITY_CACHE_REFRESH_ENTITIES_IN_ERROR
      scheduleFrequencies:
        type: array
        items:
          type: string
          enum:
          - MINUTELY
          - HOURLY
          - DAILY
          - WEEKLY
          - MONTHLY
  ComponentVersionsModel:
    type: object
    properties:
      connectorsVersion:
        type: array
        items:
          type: string
      indexerVersions:
        type: array
        items:
          type: string
      securityCacheVersions:
        type: array
        items:
          type: string
      securityProviderVersions:
        type: array
        items:
          type: string
  PrivilegeModel:
    type: object
    properties:
      owner:
        type: string
      targetDomain:
        type: string
      targetIds:
        type: array
        items:
          type: string
      type:
        type: string
  PageModel«OrganizationBackupModel»:
    type: object
    properties:
      items:
        type: array
        items:
          "$ref": "#/definitions/OrganizationBackupModel"
      totalEntries:
        type: integer
        format: int64
      totalPages:
        type: integer
        format: int32
  JsonStringIdWrapper:
    type: object
    properties:
      id:
        type: string
  ClusterIndexerModel:
    type: object
    properties:
      adminPort:
        type: integer
        format: int32
      adminUri:
        type: string
      agentId:
        type: string
      componentName:
        type: string
      componentPlatform:
        type: string
      componentVersion:
        type: string
      id:
        type: string
      indexerDocUri:
        type: string
      indexerRateUri:
        type: string
      indexerTagUri:
        type: string
      name:
        type: string
      searchPort:
        type: integer
        format: int32
      searchServerUri:
        type: string
  OrganizationCreatedModel:
    type: object
    properties:
      apiKey:
        "$ref": "#/definitions/ApiKeyModel"
      id:
        type: string
  ClusterCrawlerModel:
    type: object
    properties:
      adminPort:
        type: integer
        format: int32
      adminUri:
        type: string
      agentId:
        type: string
      componentName:
        type: string
      componentPlatform:
        type: string
      componentVersion:
        type: string
      id:
        type: string
      name:
        type: string
  PageModel«string»:
    type: object
    properties:
      items:
        type: array
        items:
          type: string
      totalEntries:
        type: integer
        format: int64
      totalPages:
        type: integer
        format: int32
  ClusterSecurityProviderModel:
    type: object
    properties:
      adminPort:
        type: integer
        format: int32
      adminUri:
        type: string
      agentId:
        type: string
      componentName:
        type: string
      componentPlatform:
        type: string
      componentVersion:
        type: string
      id:
        type: string
      name:
        type: string
      type:
        type: string
      useDefaultConfiguration:
        type: boolean
  UserRealmModel:
    type: object
    properties:
      member:
        type: boolean
      realm:
        "$ref": "#/definitions/RealmModel"
  VersionModel:
    type: object
    properties:
      componentName:
        type: string
      version:
        type: string
  ConnectorInformationModel:
    type: object
    properties:
      allowed:
        type: boolean
      allowedSchedules:
        type: array
        items:
          "$ref": "#/definitions/AllowedScheduleModel"
      sourceVisibilities:
        type: array
        items:
          type: string
          enum:
          - PRIVATE
          - SECURED
          - SHARED
      type:
        type: string
        enum:
        - AMAZONS3
        - BOX
        - BOX_ENTERPRISE
        - CONFLUENCE
        - CONFLUENCE2
        - CONFLUENCE2_HOSTED
        - CUSTOM
        - DROPBOX
        - DROPBOX_FOR_BUSINESS
        - EXCHANGE
        - GMAIL
        - GMAIL_DOMAIN_WIDE
        - GMAIL_SINGLE_USER
        - GOOGLE_DRIVE_DOMAIN_WIDE
        - GOOGLE_DRIVE_SINGLE_USER
        - JIRA2
        - JIRA2_HOSTED
        - JIVE
        - JIVE_HOSTED
        - LITHIUM
        - MICROSOFT_DYNAMICS
        - PUSH
        - RSS
        - SALESFORCE
        - SHAREPOINT_ONLINE
        - SITECORE
        - SITEMAP
        - TWITTER2
        - WEB2
        - YOUTUBE
