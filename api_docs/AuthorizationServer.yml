---
  info: 
    termsOfService: "Coveo API terms of service"
    contact: 
      url: "www.coveo.com"
      name: "Coveo"
      email: "support@coveo.com"
    description: "API for Coveo Platform"
    license: {}
    title: "Coveo Platform API"
    version: "1.0"
  paths: 
    /rest/organizations/{organizationId}/saml/identityproviders: 
      post: 
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/SamlIdentityProviderModel"
          201: 
            description: "Created"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            schema: 
              $ref: "#/definitions/SamlIdentityProviderModel"
            description: "samlIdentityProviderModel"
            required: true
            name: "samlIdentityProviderModel"
            in: "body"
        produces: 
          - "*/*"
        tags: 
          - "Saml Identity Providers"
        x-pretty-name: "createIdentityProvider"
        summary: "Add an identity provider"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "createIdentityProviderUsingPOST"
      get: 
        responses: 
          200: 
            description: "OK"
            schema: 
              items: 
                $ref: "#/definitions/SamlIdentityProviderModel"
              type: "array"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Saml Identity Providers"
        x-pretty-name: "getIdentityProviders"
        summary: "Get all identity providers for this organization"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getIdentityProvidersUsingGET"
    /rest/oauth2clients/{clientId}: 
      get: 
        responses: 
          200: 
            description: "OK"
            schema: 
              items: 
                $ref: "#/definitions/OAuth2ClientModel"
              type: "array"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "clientId"
            required: false
            type: "string"
            name: "clientId"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "OAuth2 Clients"
        x-pretty-name: "getClient"
        summary: "Get oauth2 client in authorization server"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getClientUsingGET"
    /rest/realms/{realmId}: 
      get: 
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/RealmModel"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "Id of the realm to get"
            required: true
            type: "string"
            name: "realmId"
            in: "path"
        produces: 
          - "application/json"
        tags: 
          - "Realms"
        x-pretty-name: "getRealm"
        summary: "Get the realm matching the specified id."
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getRealmUsingGET"
    /rest/organizations/{organizationId}/saml/identityproviders/{id}: 
      put: 
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/SamlIdentityProviderModel"
          201: 
            description: "Created"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "id"
            required: true
            type: "string"
            name: "id"
            in: "path"
          - 
            schema: 
              $ref: "#/definitions/SamlIdentityProviderModel"
            description: "samlIdentityProviderModel"
            required: true
            name: "samlIdentityProviderModel"
            in: "body"
        produces: 
          - "*/*"
        tags: 
          - "Saml Identity Providers"
        x-pretty-name: "updateIdentityProvider"
        summary: "Update an identity provider"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "updateIdentityProviderUsingPUT"
      delete: 
        responses: 
          200: 
            description: "OK"
          204: 
            description: "No Content"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "id"
            required: true
            type: "string"
            name: "id"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Saml Identity Providers"
        x-pretty-name: "deleteIdentityProvider"
        summary: "Delete an identity provider"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "deleteIdentityProviderUsingDELETE"
      get: 
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/SamlIdentityProviderModel"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "id"
            required: true
            type: "string"
            name: "id"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Saml Identity Providers"
        x-pretty-name: "getIdentityProvider"
        summary: "Get an identity provider"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getIdentityProviderUsingGET"
    /rest/users/{username}/realms: 
      get: 
        responses: 
          200: 
            description: "OK"
            schema: 
              items: 
                $ref: "#/definitions/RealmModel"
              type: "array"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "username"
            required: true
            type: "string"
            name: "username"
            in: "path"
        produces: 
          - "application/json"
        tags: 
          - "Users"
        x-pretty-name: "getAllExistingRealmsForUser"
        summary: "Get a single user's realms"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getAllExistingRealmsForUserUsingGET"
    /rest/oauth2clients: 
      get: 
        responses: 
          200: 
            description: "OK"
            schema: 
              items: 
                $ref: "#/definitions/OAuth2ClientModel"
              type: "array"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        produces: 
          - "*/*"
        tags: 
          - "OAuth2 Clients"
        x-pretty-name: "getClients"
        summary: "Get all oauth2 clients in authorization server"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getClientsUsingGET"
    /rest/organizations/{organizationId}/saml/certificate: 
      get: 
        responses: 
          200: 
            description: "OK"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Saml Certificate"
        x-pretty-name: "getPlatformPublicCertificate"
        summary: "Get the Coveo Cloud Platform Saml public certificate."
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getPlatformPublicCertificateUsingGET"
    /rest/realms: 
      get: 
        responses: 
          200: 
            description: "OK"
            schema: 
              items: 
                $ref: "#/definitions/RealmModel"
              type: "array"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "realmIds"
            items: 
              type: "string"
            required: true
            collectionFormat: "multi"
            in: "query"
            type: "array"
            name: "realmIds"
        produces: 
          - "application/json"
        tags: 
          - "Realms"
        x-pretty-name: "getRealms"
        summary: "Get realms by ids."
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getRealmsUsingGET"
    /rest/users/{username}: 
      put: 
        responses: 
          200: 
            description: "OK"
          201: 
            description: "Created"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "username"
            required: true
            type: "string"
            name: "username"
            in: "path"
          - 
            schema: 
              $ref: "#/definitions/UserModel"
            description: "userModel"
            required: true
            name: "userModel"
            in: "body"
        produces: 
          - "application/json"
        tags: 
          - "Users"
        summary: "updateUserAdditionalInformation"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "updateUserAdditionalInformationUsingPUT"
      get: 
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/UserModel"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "Username of the user"
            required: true
            type: "string"
            name: "username"
            in: "path"
        produces: 
          - "application/json"
        tags: 
          - "Users"
        x-pretty-name: "getUser"
        summary: "Get a single user"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getUserUsingGET"
    /rest/realms/{realmId}/members: 
      get: 
        responses: 
          200: 
            description: "OK"
            schema: 
              items: 
                $ref: "#/definitions/UserModel"
              type: "array"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "Id of the realm to retrieve the users for"
            required: true
            type: "string"
            name: "realmId"
            in: "path"
        produces: 
          - "application/json"
        tags: 
          - "Realms"
        x-pretty-name: "getRealmMembers"
        summary: "Get all members for a realm."
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getRealmMembersUsingGET"
  tags: 
    - 
      name: "Saml Certificate"
      description: "Saml Certificate Resource"
    - 
      name: "Saml Identity Providers"
      description: "Saml Identity Provider Resource"
    - 
      name: "OAuth2 Clients"
      description: "O Auth 2 Client Resource"
    - 
      name: "Users"
      description: "User Resource"
    - 
      name: "Realms"
      description: "Realm Resource"
  basePath: "/"
  securityDefinitions: 
    oauth2: 
      flow: "implicit"
      type: "oauth2"
      authorizationUrl: "https://platform.cloud.coveo.com/oauth/authorize"
      scopes: 
        full: "Required"
  host: "platform.cloud.coveo.com:443"
  definitions: 
    SamlIdentityProviderModel: 
      type: "object"
      properties: 
        displayName: 
          type: "string"
        organizationId: 
          type: "string"
        postBindingEndpoint: 
          type: "string"
        x509Certificate: 
          type: "string"
        entityId: 
          type: "string"
        id: 
          type: "string"
    UserModel: 
      type: "object"
      properties: 
        username: 
          type: "string"
        displayName: 
          type: "string"
        realms: 
          items: 
            $ref: "#/definitions/UserRealmModel"
          type: "array"
        socialUser: 
          type: "boolean"
        enabled: 
          type: "boolean"
        additionalInformation: 
          additionalProperties: 
            type: "string"
          type: "object"
        emailAliases: 
          items: 
            type: "string"
          type: "array"
        samlIdentityProviderId: 
          type: "string"
        lastLogin: 
          type: "integer"
          format: "int64"
        provider: 
          enum: 
            - "SALESFORCE"
            - "SALESFORCE_SANDBOX"
            - "GOOGLE"
            - "OFFICE365"
            - "SAML"
            - "OTHER"
          type: "string"
        locked: 
          type: "boolean"
        providerUsername: 
          type: "string"
        expired: 
          type: "boolean"
        email: 
          type: "string"
        credentialsExpired: 
          type: "boolean"
    RealmModel: 
      type: "object"
      properties: 
        displayName: 
          type: "string"
        id: 
          type: "string"
        provider: 
          enum: 
            - "SALESFORCE"
            - "SALESFORCE_SANDBOX"
            - "GOOGLE"
            - "OFFICE365"
            - "SAML"
            - "OTHER"
          type: "string"
    OAuth2ClientModel: 
      type: "object"
      properties: 
        scopes: 
          items: 
            type: "string"
          type: "array"
        autoApproveAllScopes: 
          type: "boolean"
        registeredRedirectUri: 
          items: 
            type: "string"
          type: "array"
        allowedIPs: 
          items: 
            type: "string"
          type: "array"
        additionalInformation: 
          type: "object"
        enabled: 
          type: "boolean"
        organizationRequiredInTokens: 
          type: "boolean"
        clientId: 
          type: "string"
        resourceIds: 
          items: 
            type: "string"
          type: "array"
        accessTokenValiditySeconds: 
          type: "integer"
          format: "int32"
        tokensRevokableOnLogoutEndpoint: 
          type: "boolean"
        clientAuthorities: 
          items: 
            type: "string"
          type: "array"
        authorizedGrantTypes: 
          items: 
            type: "string"
          type: "array"
        autoApproveScopes: 
          items: 
            type: "string"
          type: "array"
        refreshTokenValiditySeconds: 
          type: "integer"
          format: "int32"
    UserRealmModel: 
      type: "object"
      properties: 
        member: 
          type: "boolean"
        realmModel: 
          $ref: "#/definitions/RealmModel"
        realm: 
          $ref: "#/definitions/RealmModel"
  swagger: "2.0"

